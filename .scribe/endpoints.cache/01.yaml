## Autogenerated by Scribe. DO NOT MODIFY.

name: Customers
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/customers
    metadata:
      groupName: Customers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new customer.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the customer.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the customer.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'The phone number of the customer.'
        required: false
        example: 123-456-7890
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'The address of the customer.'
        required: false
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      phone: 123-456-7890
      address: '123 Main St'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "status": true,
            "message": "Customer created Successfully",
            "data": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "phone": "123-456-7890",
              "address": "123 Main St",
              "created_at": "2024-05-30T00:00:00.000000Z",
              "updated_at": "2024-05-30T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "name": ["The name field is required."],
            "email": ["The email field is required."]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hDa1v5f36bkdePVca86Eg4Z'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/customers
    metadata:
      groupName: Customers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all customers.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Record found",
            "data": [
              {
                "id": 1,
                "name": "John Doe",
                "email": "john@example.com",
                "phone": "123-456-7890",
                "address": "123 Main St",
                "created_at": "2024-05-30T00:00:00.000000Z",
                "updated_at": "2024-05-30T00:00:00.000000Z"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v68k13daP5DVg4ahcEfb6eZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/customers/{id}'
    metadata:
      groupName: Customers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a single customer.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Customer's Record found",
            "data": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "phone": "123-456-7890",
              "address": "123 Main St",
              "created_at": "2024-05-30T00:00:00.000000Z",
              "updated_at": "2024-05-30T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Customer not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hDgka45bd16fZe8avcEVP63'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/customers/{id}'
    metadata:
      groupName: Customers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update an existing customer.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the customer.'
        required: false
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      email:
        name: email
        description: 'The email of the customer.'
        required: false
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      phone:
        name: phone
        description: 'The phone number of the customer.'
        required: false
        example: 123-456-7890
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      address:
        name: address
        description: 'The address of the customer.'
        required: false
        example: '123 Main St'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      phone: 123-456-7890
      address: '123 Main St'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "status": true,
            "message": "Customer updated Successfully",
            "data": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "phone": "123-456-7890",
              "address": "123 Main St",
              "created_at": "2024-05-30T00:00:00.000000Z",
              "updated_at": "2024-05-30T00:00:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "name": ["The name field is required."],
            "email": ["The email field is required."]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Customer not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kcVDav6g8fbhdZ5a6e1P34E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/customers/{id}'
    metadata:
      groupName: Customers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a customer.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Customer deleted successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Customer not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer advPakecV846Ebhf5D3g61Z'
    controller: null
    method: null
    route: null
    custom: []
